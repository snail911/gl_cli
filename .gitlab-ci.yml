stages:
  - build
  - test
  - package
  - docker-build
  - docker-publish

variables:
  DOCKER_REGISTRY: "registry.example.com"
  DOCKER_IMAGE_NAME: "openssl-image"
  DOCKER_IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

build:
  stage: build
  script:
    - ./build.sh -b

test:
  stage: test
  script:
    - ./build.sh -t

package:
  stage: package
  script:
    - mkdir openssl-package
    - # Копирование бинарных файлов OpenSSL в директорию openssl-package
    - cp /path/to/openssl-binary-files openssl-package/
    - # Создание архива с бинарными файлами OpenSSL
    - tar czvf openssl-package.tar.gz openssl-package/
  artifacts:
    paths:
      - openssl-package.tar.gz

docker-build:
  stage: docker-build
  script:
    - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .

docker-publish:
  stage: docker-publish
  script:
    - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin $DOCKER_REGISTRY
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

